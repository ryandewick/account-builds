@use '../../styles/variables' as *;

.buildStepsPage {
  width: 100%;
}

.buildHeader {
  margin-bottom: $spacing-xl;
}

.buildTitle {
  font-size: $font-size-2xl;
  font-weight: $font-weight-bold;
  margin-bottom: $spacing-sm;
  color: $text-primary;
}

.buildDescription {
  font-size: $font-size-md;
  color: $text-secondary;
  margin-bottom: $spacing-lg;
}

.progressContainer {
  background-color: $background-gray;
  border-radius: $border-radius-md;
  padding: $spacing-md;
  margin-bottom: $spacing-lg;
}

.progressInfo {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: $spacing-sm;
  
  span {
    font-weight: $font-weight-medium;
    color: $text-primary;
  }
}

.resetButton {
  background: none;
  border: none;
  color: $error-color;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  cursor: pointer;
  padding: $spacing-xs $spacing-sm;
  border-radius: $border-radius-sm;
  transition: $transition-base;
  
  &:hover:not(:disabled) {
    background-color: rgba($error-color, 0.1);
    text-decoration: underline;
  }
  
  &:disabled {
    color: $text-light;
    cursor: not-allowed;
  }
}

.progressBar {
  height: 8px;
  background-color: $background-light;
  border-radius: $border-radius-full;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  background-color: $secondary-color;
  border-radius: $border-radius-full;
  transition: width 0.3s ease;
}

.stepsContainer {
  margin-bottom: $spacing-xl;
}

.buildFooter {
  margin-top: $spacing-xl;
  padding-top: $spacing-lg;
  border-top: 1px solid $border-light;
  text-align: center;
}

// Loading, error, and empty states
.loadingContainer,
.errorContainer,
.emptyContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: $spacing-2xl 0;
  text-align: center;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba($primary-color, 0.2);
  border-top-color: $primary-color;
  border-radius: 50%;
  margin-bottom: $spacing-md;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.errorMessage {
  color: $error-color;
  margin-bottom: $spacing-md;
  font-weight: $font-weight-medium;
}

@media (max-width: $breakpoint-md) {
  .progressInfo {
    flex-direction: column;
    align-items: flex-start;
    gap: $spacing-sm;
  }
  
  .resetButton {
    align-self: flex-end;
  }
}